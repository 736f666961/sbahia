/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-02-11 20:26:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import ma.youcode.sbahia.impldao.ProductDaoImpl;
import ma.youcode.sbahia.models.Product;

public final class products_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ma.youcode.sbahia.impldao.ProductDaoImpl");
    _jspx_imports_classes.add("ma.youcode.sbahia.models.Product");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"ISO-8859-1\">\r\n");
      out.write("\t\t<title>Products</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"./css/style.css\" />\r\n");
      out.write("\t\t<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1\" crossorigin=\"anonymous\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<a href=\"/sbahia/logout\" class=\"logout\">Logout</a>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t");

		     	ProductDaoImpl productDaoImpl = new ProductDaoImpl();
	        	List<Product> products = productDaoImpl.getAllProducts();
	        	
	        	for(Product product : products) {
			
      out.write("\r\n");
      out.write("\t\t\t<div class=\"card\">\r\n");
      out.write("\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t<div class=\"product-image\">\r\n");
      out.write("\t\t\t\t\t\t<img alt=\"product image\" width=\"100px\" height=\"100px\" src=\"");
      out.print( product.getProductImage() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"product-info\">\r\n");
      out.write("\t\t\t\t\t\t<h4>");
      out.print( product.getProductName() );
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t\t<p>");
      out.print( product.getproductDescription() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"card-buttons\">\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print( request.getContextPath() + "/like/?id=" + product.getId() );
      out.write("\" class=\"like\"  ");
      out.print( product.isInteracted() ? "disabled" : "" );
      out.write(">Like</a>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print( request.getContextPath() + "/dislike/?id=" + product.getId() );
      out.write("\"  class=\"dislike\" ");
      out.print( product.isInteracted() ? "disabled" : "" );
      out.write(">Dislike</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"card-footer\">\r\n");
      out.write("\t\t\t\t\t<div class=\"like\">\r\n");
      out.write("\t\t\t\t\t\t<img alt=\"like icon\" width=\"15px\" height=\"15px\" src=\"./icons/like.png\">\r\n");
      out.write("\t\t\t\t\t\t<p style=\"margin-top: 0px\">:");
      out.print( product.getProductLikes() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"dislike\">\r\n");
      out.write("\t\t\t\t\t\t<img alt=\"dislike icon\" width=\"15px\" height=\"15px\" src=\"./icons/dislike.png\">\r\n");
      out.write("\t\t\t\t\t\t<p style=\"margin-top: 0px\">:");
      out.print( product.getProductDislikes() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\" integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tvar likes = document.querySelectorAll('.like');\r\n");
      out.write("\t\r\n");
      out.write("\t\t\tlikes.forEach(function (element) { \r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t$(element).on(\"click\", function(event){\r\n");
      out.write("\t\t\t\t\tvar x = element.attributes.getNamedItem('disabled');;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t        if (x != null) {\r\n");
      out.write("\t\t\t        \tevent.preventDefault();\r\n");
      out.write("\t\t\t        \tconsole.log(\"Disabled !\");\r\n");
      out.write("\t\t\t        }else {\r\n");
      out.write("\t\t\t        \tconsole.log(\"Not Disabled !\"); \r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    })\r\n");
      out.write("\t        });\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar dislikes = document.querySelectorAll('.dislike');\r\n");
      out.write("\r\n");
      out.write("\t\t\tdislikes.forEach(function (element) { \r\n");
      out.write("\t\t\t\t// console.log(element);\r\n");
      out.write("\t\t\t\t$(element).on(\"click\", function(event){\r\n");
      out.write("\t\t\t\t\tvar x = element.attributes.getNamedItem('disabled');;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t        if (x != null) {\r\n");
      out.write("\t\t\t        \tevent.preventDefault();\r\n");
      out.write("\t\t\t        \tconsole.log(\"Disabled !\");\r\n");
      out.write("\t\t\t        }else {\r\n");
      out.write("\t\t\t        \tconsole.log(\"Not Disabled !\"); \r\n");
      out.write("\t\t\t        } \r\n");
      out.write("\t\t\t    })\r\n");
      out.write("\t        })\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
